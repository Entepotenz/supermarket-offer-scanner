---
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

# cancel a currently running workflow from the same PR, branch or tag when a new workflow is triggered
# source: https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre/67939898#67939898
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY_GITHUB: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUILD_PLATFORMS: "linux/amd64,linux/arm64"
  BASE_IMAGE: "library/alpine:latest"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    #      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      #      - name: Install Cosign
      #        uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: (github.event_name != 'pull_request') && (!startsWith(github.event.pull_request.head.ref, 'dependabot/') && !startsWith(github.event.pull_request.head.ref, 'renovate/') && github.event.head_commit.author.username != 'renovate-bot')
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build-and-push
        with:
          context: .
          platforms: ${{ env.BUILD_PLATFORMS }}
          pull: true
          file: Docker/docker-cron/Dockerfile
          push: ${{ (github.event_name != 'pull_request') && (!startsWith(github.event.pull_request.head.ref, 'dependabot/') && !startsWith(github.event.pull_request.head.ref, 'renovate/') && github.event.head_commit.author.username != 'renovate-bot') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.TOKEN }}
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
#      - name: Sign image with a key
#        run: |
#          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
#        env:
#          TAGS: ${{ steps.meta.outputs.tags }}
#          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
#          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
#          DIGEST: ${{ steps.build-and-push.outputs.digest }}
#
#      - name: Sign the images with GitHub OIDC Token
#        env:
#          DIGEST: ${{ steps.build-and-push.outputs.digest }}
#          TAGS: ${{ steps.meta.outputs.tags }}
#        run: cosign sign --yes "${TAGS}@${DIGEST}"
